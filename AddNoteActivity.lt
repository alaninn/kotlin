package com.alan.appdiariolocal
import android.content.Intent
import android.os.Bundle
import android.text.TextUtils
import android.widget.Button
import android.widget.EditText
import android.widget.LinearLayout
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity

class AddNoteActivity : AppCompatActivity() {
    private lateinit var expenseContainer: LinearLayout
    private var expenseCounter = 1
    private val expenses = mutableListOf<Pair<String, Double>>()

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_add_note)

        val buttonSave = findViewById<Button>(R.id.buttonSave)
        val buttonAddExpense = findViewById<Button>(R.id.buttonAddExpense)
        expenseContainer = findViewById(R.id.expenseContainer)

        buttonAddExpense.setOnClickListener {
            addExpenseField()
        }

        buttonSave.setOnClickListener {
            val date = findViewById<EditText>(R.id.editTextDate).text.toString()
            val cashSales = findViewById<EditText>(R.id.editTextCashSales).text.toString().toDoubleOrNull() ?: 0.0
            val onlineSales = findViewById<EditText>(R.id.editTextOnlineSales).text.toString().toDoubleOrNull() ?: 0.0

            var allFieldsValid = true

            if (TextUtils.isEmpty(date)) {
                findViewById<EditText>(R.id.editTextDate).error = "Este campo es obligatorio"
                allFieldsValid = false
            }

            if (cashSales == 0.0) {
                findViewById<EditText>(R.id.editTextCashSales).error = "Este campo es obligatorio"
                allFieldsValid = false
            }

            if (onlineSales == 0.0) {
                findViewById<EditText>(R.id.editTextOnlineSales).error = "Este campo es obligatorio"
                allFieldsValid = false
            }

            if (allFieldsValid) {
                expenses.clear()

                for (i in 2..expenseCounter) {
                    val nombreEditText = findViewById<EditText>(resources.getIdentifier("editTextExpenseName$i", "id", packageName))
                    val valorEditText = findViewById<EditText>(resources.getIdentifier("editTextExpenseValue$i", "id", packageName))
                    val nombre = nombreEditText.text.toString()
                    val valor = valorEditText.text.toString().toDoubleOrNull() ?: 0.0

                    // Validar si el nombre del gasto está vacío
                    if (TextUtils.isEmpty(nombre)) {
                        nombreEditText.error = "Este campo es obligatorio"
                        allFieldsValid = false
                        break
                    }

                    expenses.add(Pair(nombre, valor))
                }

                if (allFieldsValid) {
                    val dailyRecord = DailyRecord(date, expenses, cashSales, onlineSales)

                    val resultIntent = Intent()
                    resultIntent.putExtra("newRecord", dailyRecord)
                    setResult(RESULT_OK, resultIntent)
                    finish()
                } else {
                    Toast.makeText(this, "Por favor, complete todos los campos obligatorios.", Toast.LENGTH_SHORT).show()
                }
            }
        }
    }

    private fun addExpenseField() {
        val newRow = LinearLayout(this)
        newRow.layoutParams = LinearLayout.LayoutParams(
            LinearLayout.LayoutParams.MATCH_PARENT,
            LinearLayout.LayoutParams.WRAP_CONTENT
        )
        newRow.orientation = LinearLayout.HORIZONTAL

        val newExpenseNameEditText = EditText(this)
        newExpenseNameEditText.layoutParams = LinearLayout.LayoutParams(
            0,
            LinearLayout.LayoutParams.WRAP_CONTENT,
            1f
        )
        newExpenseNameEditText.hint = "Nombre del Gasto $expenseCounter"

        val newExpenseValueEditText = EditText(this)
        newExpenseValueEditText.layoutParams = LinearLayout.LayoutParams(
            0,
            LinearLayout.LayoutParams.WRAP_CONTENT,
            1f
        )
        newExpenseValueEditText.hint = "Valor"
        newExpenseValueEditText.inputType = android.text.InputType.TYPE_CLASS_NUMBER or
                android.text.InputType.TYPE_NUMBER_FLAG_DECIMAL

        newRow.addView(newExpenseNameEditText)
        newRow.addView(newExpenseValueEditText)

        expenseContainer.addView(newRow, expenseContainer.childCount - 1)

        expenseCounter++
    }
}
